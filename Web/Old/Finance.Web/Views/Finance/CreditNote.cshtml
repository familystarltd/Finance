@model FinanceManagement.Web.Model.CreditNoteViewModel
<style>
    table, tr, th, td {
        border: none;
    }
</style>
@Scripts.Render("~/bundles/jquery/validation")
@Html.Partial("_DataLoader")
@Html.Partial("_CreditNote", new ViewDataDictionary(Html.ViewData))
<h3><img src="~/Content/Images/credit_Note.png" style="margin-right:5px;width:75px;height:75px;" />CreditNote</h3>
<div class="row" style="margin-left: 10px; margin-top: 15px;">
    <div class="col-md-12" style="border: 1px solid; padding-top: 15px; padding-bottom: 5px;">
        <div id="Errorwrap" class="row" style="margin-bottom:5px;color:red;width:auto;height:auto;">
        </div>
        @using (Html.BeginForm("CreditNote", "Finance", FormMethod.Post, new { id = "creditNoteListForm", @class = "form-inline", enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(d => d.Pagination.PageSize)
            @Html.Hidden("Reset", Model.Reset)
            <div class="form-group">
                <label for="CreditNotePayer">Payer Name</label>
                @Html.TextBoxFor(d => d.PayerName, string.Empty, new { @class = "creditNotePayerName form-control", @readonly = "readonly", style = "color:black;width:300px;" })
                @Html.HiddenFor(d => d.PayerId, new { @class = "creditNotePayerId" })
                <button type="button" id="btnPayerNameLookupCreditNoteSearch" class="btn btn-default" style="font-weight:bold;">...</button>
                <label for="FromDate">From Date</label>
                @Html.TextBoxFor(d => d.FromDate, new { @class = "form-control", style = "color:black;width:130px;" })
                <label for="ToDate">To Date</label> @Html.TextBoxFor(d => d.ToDate, new { @class = "form-control", style = "color:black;width:130px;" })
                <input type="image" id="creditNoteSearch" src="~/Content/images/search.png" class="btn" style="height:48px;cursor:pointer;padding-top:5px;" />
                <input type="image" id="creditNoteSearchReset" src="~/Content/images/reset.png" class="btn" style="height:48px;cursor:pointer;padding-top:5px;" />
                <input type="image" id="addCreditNote" src="~/Content/images/add-plus.png" class="btn" style="height:48px;cursor:pointer;padding-top:5px;" />
            </div>
            if (Model.CreditNotes != null && Model.CreditNotes.Count() > 0)
            {
                <table style="width:100%;">
                    <thead>
                        <tr style="color:white;background-color:grey">
                            <th>Credit Note</th>
                            <th>Date</th>
                            <th>Payer</th>
                            <th style="text-align:right;padding-right:10px;">Amount</th>
                            <th style="text-align:right;padding-right:10px;">Credit Available</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (FinanceManagement.Web.Model.CreditNoteModel creditNote in Model.CreditNotes)
                        {
                            <tr>
                                <td style="vertical-align:top;">
                                    <a onclick='javascript: return false;' title="Credit Note" class="CreditNoteViewByCreditNoteNo" data-app-id="@creditNote.CreditNoteNo" style="cursor:pointer;text-decoration:underline;">
                                        @string.Format("{0}{1}", creditNote.RefPrefix, creditNote.CreditNoteNo)
                                    </a>
                                </td>
                                <td style="vertical-align:top;">@creditNote.ProcessedDate.Date.ToString("dd/MM/yyyy")</td>
                                <td style="padding-bottom:19px;">
                                    @creditNote.Payer.Name
                                </td>
                                <td style="text-align:right;padding-right:10px;vertical-align:top;">
                                    @string.Format("{0:c}", creditNote.Amount)
                                </td>
                                <td style="text-align:right;padding-right:10px;vertical-align:top;">
                                    @string.Format("{0:c}", creditNote.CreditAvailable)
                                </td>
                            </tr>

                        }
                    </tbody>

                    <tfoot>
                        <tr>
                            <td colspan="5">
                                @Html.Partial("_PaginationFormSubmit", Model.Pagination, new ViewDataDictionary(Html.ViewData) { TemplateInfo = new System.Web.Mvc.TemplateInfo { HtmlFieldPrefix = "Pagination" } })
                            </td>
                        </tr>
                    </tfoot>
                </table>
            }
        }
    </div>
</div>
<script>
    $(document).ready(function () {
        var validator;
        $("#Reset").val("False");
        function configValidationRules() {
            Rate_Rules = { FromDate: { date: true }, ToDate: { date: true } };
            Rate_Messages = { FromDate: { date: "Please enter valid from date" }, ToDate: { date: "Please enter valid To date" } };
            $('#creditNoteListForm').removeData('validator');
            validator = new jQueryValidatorWrapper("creditNoteListForm",
                Rate_Rules, Rate_Messages, "Errorwrap");
        }
        function validateDate() {
            var fromDate = new Date($("#FromDate").datepicker("getDate"));
            var ToDate = new Date($("#ToDate").datepicker("getDate"));
            if (fromDate > ToDate) {
                alert("From date shoud be less than to date");
                return false;
            }
            return true;
        }
        $("#creditNoteSearch").click(function (e) {
            configValidationRules();
            if (!validateDate()) { e.preventDefault(); return; }
            if (!validator.validate()) { e.preventDefault(); return; }
        });
        $("#creditNoteSearchReset").click(function (e) {
            $(".creditNotePayerName").val("");
            $(".creditNotePayerId").val("");
            $("#Reset").val("True");
        });
        $("#addCreditNote").click(function (e) {
            e.preventDefault();
            $(".creditNote-create-dialog").data("Mode", "New");
            $(".creditNote-create-dialog").dialog("open");
        });
        $("#btnPayerNameLookupCreditNoteSearch").click(function (e) {
            $(".payer-lookup-dialog").dialog("open");
        });
        $(".payer-lookup-dialog").on("dialogclose", function (event, ui) {
            $(".creditNotePayerName").val($(".payer-lookup-dialog").data("payerName"));
            $(".creditNotePayerId").val($(".payer-lookup-dialog").data("payerId"));
        });
        $("#FromDate").datepicker({ dateFormat: 'dd/mm/yy', autoClose: true })
        .on("change", function (e) {
            //var effectDate = new Date($(this).datepicker("getDate"));
            //$(this).datepicker("setDate", effectDate);
        });
        $("#ToDate").datepicker({ dateFormat: 'dd/mm/yy', autoClose: true })
        .on("change", function (e) {

            //var effectDate = new Date($(this).datepicker("getDate"));
            //alert(effectDate);
        });
        $('body').on('click', 'a.CreditNoteViewByCreditNoteNo', function (e) {
            e.preventDefault();
            var creditNoteNo = $(this).attr("data-app-id");
            if (creditNoteNo) {
                e.preventDefault();
                $(".creditNote-view-dialog").data("Mode", "VIEW");
                $(".creditNote-view-dialog").data("PayerId", null);
                $(".creditNote-view-dialog").data("CreditNoteNo", creditNoteNo);
                $(".creditNote-view-dialog").fadeOut();
                $(".creditNote-view-dialog").dialog("open");
            }
        });
        $(".creditNote-view-dialog").on("dialogclose", function (event, ui) {
            var CREDITVIEW_MODE = $(".creditNote-view-dialog").data("Mode");
            switch (CREDITVIEW_MODE) {
                case "View":
                case "VIEW":
                    return;
                    break;
                case "ADDED":
                case "Added":
                    location.reload();
                    break;
                default:
                    location.reload();
                    break;
            }
        });
    });
</script>
