@Html.Partial("_Rate", new ViewDataDictionary(Html.ViewData));
@using Finance.Web;
<style>
    .ui-autocomplete
{
    position:absolute;
    cursor:default;
    z-index:1000000 !important
}
</style>
<div class="fee-setup-dialog" id="fee-setup" title="Fee Setup" style="display: none;padding:0px;margin:0px;overflow-x:hidden;overflow-y:unset;">
    <h4 style="margin-top:0px;"><img src="~/images/fee_setup.png" style="width:32px;height:32px;" /> Fee Setup for <span id="fee_CustomerName" style="font-weight:bold;text-decoration:underline;" /></h4>
    <div class="row" style="margin-bottom:5px;">
        <div class="col-md-3">
            Fee Name
        </div>
        <div class="col-md-8">
            <input type="text" class="form-control" value="" id="fee_Name" />
        </div>
    </div>
    <div class="row" style="margin-bottom:5px;">
        <div class="col-md-3">
            Pay Reference
        </div>
        <div class="col-md-8">
            <input type="text" class="form-control" value="" id="fee_PayRef" />
        </div>
    </div>
    <div class="row" style="margin-bottom:5px;">
        <div class="col-md-3">
            Payer
        </div>
        <div class="col-md-8">
            <input type="hidden" id="PayerValueControlId" />
            @Html.Partial("_PayerLoader", new  { ParentId = "#fee-setup" })
        </div>
    </div>
    <div class="row" style="margin-bottom:5px;">
        <div class="col-md-3">
            Payment Term
        </div>
        <div class="col-md-3">
            @*@Html.DropDownListFor(model => model..Gender, Model.ResidentInfo.Gender.ToSelectList(addPleaseSelect: true, selectMsg: "---Gender---"), new { @class = "form-control", style = "text-align: left;width:150px;" })*@
            <select id="fee_PaymentTerm" class="form-control"></select>
        </div>
        <div class="col-md-6">
            <div class="row" style="margin-bottom:5px;">
                <div class="col-md-5">
                    Effective Date
                </div>
                <div class="col-md-1">
                    <input type="text" class="form-control" value="" id="fee_EffectiveDate" style="width: 130px;" />
                </div>
            </div>
            <div class="row" style="margin-bottom:5px;">
                <div class="col-md-5">
                    Closing Date
                </div>
                <div class="col-md-1">
                    <input type="text" class="form-control" value="" id="fee_ClosingDate" style="width: 130px;" />
                </div>
            </div>
        </div>
    </div>
    <div class="row" style="border: 1px solid #baaa5a;margin:0px;padding:0px; margin-bottom:5px;width:100%;">
        <div class="header" style="font-size:medium;font-weight:bold;width:100%;">
            <img src="~/images/rate.png" style="width:32px;height:32px;" /> Rates
        </div>
        <div class="content-sub" style="overflow-y:auto; height:275px;font-size:medium;">
            <div class="col-md-12" id="listRates">
                <div class="row" id="divWeeklyRates" style="border-bottom: 1px solid rgba(217, 217, 217, 1);margin-bottom:3px;">
                    <div class="col-md-3">
                        <b style="text-decoration:underline;">Weekly Rate</b>
                    </div>
                    <div class="col-md-6">
                        <span id="weeklyRateDisplay"></span>
                    </div>
                    <div class="col-md-3" style="text-align:right;">
                        <img class="Rate_Add" data-role="Weekly" data-app-id="@Model.Id" id="weeklyRateAdd" alt="weeklyRateAdd" src="~/images/add-plus.png" style="width: 24px; height: 24px; cursor: pointer;" />
                    </div>
                </div>
                <div class="row" id="divHourlyRates" style="border-bottom: 1px solid rgba(217, 217, 217, 1); margin-bottom: 3px;">
                    <div class="col-md-3">
                        <b style="text-decoration:underline;">Hourly Rate</b>
                    </div>
                    <div class="col-md-6">
                        <span id="hourlyRateDisplay"></span>
                    </div>
                    <div class="col-md-3" style="text-align:right;">
                        <img class="Rate_Add" data-role="Hourly" data-app-id="@Model.Id" id="hourlyRateAdd" alt="hourlyRateAdd" src="~/images/add-plus.png" style="width: 24px; height: 24px; cursor: pointer; " />
                        <img class="Rate_Edit" data-role="Hourly" id="hourlyRateEdit" src="~/images/edit.png" alt="hourlyRateEdit" style="width: 24px; height: 24px; cursor: pointer; margin: 0px; padding: 0px; margin-top: 0px; cursor: pointer; " />
                        <img class="Rate_History" data-role="Hourly" id="hourlyRateHistory" src="~/images/history.png" alt="hourlyRateHistory" style="width: 24px; height: 24px; cursor: pointer; margin: 0px; padding: 0px; margin-top: 0px;" />
                    </div>
                </div>
                <div class="row" id="divDailyRates" style="border-bottom: 1px solid rgba(217, 217, 217, 1); margin-bottom: 3px;">
                    <div class="col-md-3">
                        <b style="text-decoration:underline;">Daily Rate</b>
                    </div>
                    <div class="col-md-6">
                        <span id="dailyRateDisplay"></span>
                    </div>
                    <div class="col-md-3" style="text-align:right;">
                        <img class="Rate_Add" data-role="Daily" data-app-id="@Model.Id" id="dailyRateAdd" alt="dailyRateAdd" src="~/images/add-plus.png" style="width: 24px; height: 24px; cursor: pointer; " />
                        <img class="Rate_Edit" data-role="Daily" id="dailyRateEdit" src="~/images/edit.png" alt="dailyRateEdit" style="width: 24px; height: 24px; cursor: pointer; margin: 0px; padding: 0px; margin-top: 0px;" />
                        <img class="Rate_History" data-role="Daily" id="dailyRateHistory" src="~/images/history.png" alt="dailyRatehistory" style="width: 24px; height: 24px; cursor: pointer; margin: 0px; padding: 0px; margin-top: 0px;" />
                    </div>
                </div>
                <div class="row" id="divMonthlyRates" style="border-bottom: 1px solid rgba(217, 217, 217, 1);">
                    <div class="col-md-3">
                        <b style="text-decoration:underline;">Monthly Rate</b>
                    </div>
                    <div class="col-md-6">
                        <span id="monthlyRateDisplay"></span>
                    </div>
                    <div class="col-md-3" style="text-align:right;">
                        <img class="Rate_Add" data-role="Monthly" data-app-id="@Model.Id" id="monthlyRateAdd" alt="monthlyRateAdd" src="~/images/add-plus.png" style="width: 24px; height: 24px; cursor: pointer;" />
                        <img class="Rate_Edit" data-role="Monthly" id="monthlyRateEdit" src="~/images/edit.png" alt="MonthlyRateEdit" style="width: 24px; height: 24px; cursor: pointer; margin: 0px; padding: 0px; margin-top: 0px; " />
                        <img class="Rate_History" data-role="Monthly" id="monthlyRateHistory" src="~/images/history.png" alt="MonthlyRatehistory" style="width: 24px; height: 24px; cursor: pointer; margin: 0px; padding: 0px; margin-top: 0px; " />
                    </div>
                </div>
            </div>
            <div class="col-md-12" id="saveFeeMsg" style="display:none;">
                <h3> Please click save button to continue..............</h3>
            </div>
        </div>
    </div>
    <div class="row" style="margin-bottom:5px;">
        <div class="col-md-2" style="">
            <input type="image" id="feeSave" src="~/images/Save.png" style="width:32px;height:32px;" />
            <img src="~/images/exit.png" id="exit" class="exit" style="width: 32px; height: 32px; cursor: pointer; margin: 0px; padding: 0px; margin-top: -22px;" />
        </div>
    </div>
</div>
<script>
    var getFeeUrl = @Html.Raw(string.Format("'{0}/FinanceApi/Fees/'", ViewBag.FinanceApiService));
    var getCustomerUrl =@Html.Raw(string.Format("'{0}/FinanceApi/Customers/'", ViewBag.FinanceApiService));
    var feeSaveUrl = @Html.Raw(string.Format("'{0}/FinanceApi/Fee'", ViewBag.FinanceApiService))
    var PaymentTerms = @Html.Raw(Html.ConvertEnumToJson(typeof(Finance.Web.Model.PaymentTerm)))
    $(document).ready(function () {
        var feesData; // collection of Fees for each customer
        var feeData; // single Fee (include fee data and collection of fee rates)
        var feeId;
        var customerId;
        function loadFeeData() {
            feeId = $(".fee-setup-dialog").data("feeId");
            customerId = $(".fee-setup-dialog").data("customerId");            
            $('#fee_PaymentTerm').empty();// clear options
            $(PaymentTerms).each(function () { $("<option />", { val: this.id, text: this.name }).appendTo('#fee_PaymentTerm'); });
            if (!$.isNullOrEmpty(feeId)) {
                loadFeeDataByFee(feeId);
            }
            else if (!$.isNullOrEmpty(customerId)) {
                loadFeeDataByCustomer(customerId);
            }
        }
        function loadFeeDataByFee(feeId){
            var requestCustomer = $.ajax({
                type: "GET",
                url: getFeeUrl + feeId,
                contentType: "application/json",
                datatype: "json",
                success: function (feeData) {
                    if (!$.isNullOrEmpty(feeData)) {
                        feeData.minEffectDate = new Date(feeData.maxFeeSetupDate).addDays(1);
                        $("#fee_CustomerName").text((!$.isNullOrEmpty(feeData.customer.personalInfo.fullName) ? feeData.customer.personalInfo.fullName : ""));
                        $("#fee_Name").val(!$.isNullOrEmpty(feeData.name) ? feeData.name : "");
                        $("#fee_PayRef").val(!$.isNullOrEmpty(feeData.payContactReference) ? feeData.payContactReference : "");
                        $("#weeklyRate_EffectiveDate").val();
                        $("#fee_EffectiveDate").val((!$.isNullOrEmpty(feeData.effectiveDate) ? $.datepicker.formatDate('dd/mm/yy', new Date(feeData.effectiveDate)) : ""));
                        $("#PayerName").val(!$.isNullOrEmpty(feeData.payer.name) ? feeData.payer.name : "");
                        $("#PayerValueControlId").val(!$.isNullOrEmpty(feeData.payerId) ? feeData.payerId : "");
                        $('#fee_PaymentTerm').val(!$.isNullOrEmpty(feeData.paymentTerm) ? feeData.paymentTerm : "");
                        customerId = !$.isNullOrEmpty(feeData.customerId) ? feeData.customerId : ""
                        $("#fee_ClosingDate").val((!$.isNullOrEmpty(feeData.closingDate) ? $.datepicker.formatDate('dd/mm/yy', new Date(feeData.closingDate)) : ""));
                        var date = new Date();
                        if (!$.isNullOrEmpty(feeData.closingDate)) {
                            $("#fee_ClosingDate").prop("disabled", true);
                        }
                        else {
                            $("#fee_ClosingDate").prop("disabled", false);
                            $("#fee_ClosingDate").datepicker("option", "minDate", new Date(date.getFullYear(), date.getMonth(), 1));
                        }
                        loadWeeklyFeeRates(feeData.feeRates);
                        loadHourlyFeeRates(feeData.feeRates);
                        loadDailyFeeRates(feeData.feeRates);
                        loadMonthlyFeeRates(feeData.feeRates);
                        if ($.isNullOrEmpty(feesData)) {
                            feesData = [];
                            feesData.push(feeData);
                        }
                        $("#fee_EffectiveDate").prop("disabled", true);
                        $("#fee_Name").prop("disabled", true);
                        $("#PayerName").prop("disabled", true);
                        $('#fee_PaymentTerm').prop("disabled", true);
                    }
                    else { alert("Fee details has not been found!"); closeFeeDialog();return; }
                    if ($.isNullOrEmpty(feeData.closingDate))
                        $("#feeSave").show();
                    else
                        $("#feeSave").hide();
                }
            });
            requestCustomer.fail(function (jqxhr, textStatus, error) {
                alert("Customer Fee Request failed: " + textStatus);
                closeFeeDialog();
            });
        }
        function loadFeeDataByCustomer(customerId){
            var requestCustomer = $.ajax({
                type: "GET",
                url: getCustomerUrl + customerId,
                contentType: "application/json",
                datatype: "json",
                success: function (customerData) {
                    if (customerData) {
                        feesData = customerData.fees;
                        feeId = "00000000-0000-0000-0000-000000000000";
                        if (feesData && feesData.length == 0) {
                            var dat = new Date(); 
                            //if(!$.isNullOrEmpty(customerData.maxFeeSetupDate))
                            //{
                            //    $("#fee_EffectiveDate").prop("disabled", true);
                            //}
                            var minEffectDate = !$.isNullOrEmpty(customerData.maxFeeSetupDate) ? customerData.maxFeeSetupDate : new Date();
                            $("#fee_EffectiveDate").val($.datepicker.formatDate('dd/mm/yy', new Date(minEffectDate)));
                            $("#fee_EffectiveDate").datepicker("option", "minDate", new Date(minEffectDate));
                            $("#fee_EffectiveDate").datepicker("option", "maxDate",new Date(new Date(dat).setMonth(dat.getMonth()+12)));
                            $("#fee_ClosingDate").val("");
                            $("#fee_ClosingDate").prop("disabled", true);
                            feesData = [];
                            feeData={};
                            feeData["minEffectDate"] = new Date(minEffectDate);
                        }
                        else {
                            feesData = [];
                            var date = new Date(customerData.maxFeeSetupDate);
                            minEffectDate = date.addDays(1);
                            feeData={};
                            feeData["minEffectDate"] = new Date(minEffectDate);
                            $("#fee_EffectiveDate").val($.datepicker.formatDate('dd/mm/yy', new Date()));
                            $("#fee_EffectiveDate").datepicker("option", "minDate", new Date(minEffectDate));
                            $("#fee_ClosingDate").val("");
                            $("#fee_ClosingDate").prop("disabled", true);
                        }
                        $("#fee_CustomerName").text((!$.isNullOrEmpty(customerData.personalInfo.fullName) ? customerData.personalInfo.fullName : ""));
                    }
                    else { alert("Customer has not been found!"); closeFeeDialog(); }
                    $("#feeSave").show();
                }
            });
            requestCustomer.fail(function (jqxhr, textStatus, error) { alert("Customer Fee Request failed: " + textStatus); closeFeeDialog(); });
        }
        function setFeeData(){
            if(validateFeeInfo())
            {
                $("#saveFeeMsg").hide();
                feeData = $.getJsonObject(feesData, { "id": feeId });
                if ($.isEmptyObject(feeData)) {
                    feesData.push(feeData);
                }
                feeData["id"] = feeId;
                feeData["name"] = $("#fee_Name").val();
                feeData["payerId"] = $("#PayerValueControlId").val();
                feeData["payContactReference"] = $("#fee_PayRef").val();
                feeData["customerId"] = customerId;
                feeData["paymentTerm"] = $('#fee_PaymentTerm').val();
                feeData["effectiveDate"] = $.toJsonDate($("#fee_EffectiveDate").datepicker("getDate"));
                if ($.isNullOrEmpty($("#fee_ClosingDate").val()))
                    feeData["ClosingDate"] = null;
                else
                    feeData["ClosingDate"] = $.toJsonDate($("#fee_ClosingDate").datepicker("getDate"));
                feeData["minEffectDate"]=$.toJsonDate($("#fee_EffectiveDate").datepicker("getDate"));
                return true;
            }
            return false;
        }
        function validateFeeInfo() {
            if (!$("#fee_Name").val()) {
                alert("Please enter Name of Fee");
                $("#fee_Name").focus();
            }
            else if (!$("#PayerValueControlId").val()) {
                $("#PayerName").val("");
                alert("Please enter payer for this fee");
                $("#PayerName").focus();
            }
            else if (!$("#fee_EffectiveDate").val()) {
                alert("Please enter valid effective");
                $("#fee_EffectiveDate").focus();
            }
            else{
                return true;
            }
            return false;
        }
        function loadHourlyFeeRates(feeRates) {
            // Get by RateMethod where rate method is 1 for weeklyRate
            var feeRate = $.getJsonObject(feeRates, { "rateMethod": 1 });
            $("#hourlyRateDisplay").empty();
            if (feeRate && !$.isEmptyObject(feeRate)) {
                $("#hourlyRateAdd").hide();
                var content;
                content = '<p>' + feeRate.rateDescription + '</p>';
                if (feeRate.rates && !$.isEmptyObject(feeRate.rates)) {
                    $.each(feeRate.rates, function (r, rate) {
                        if (rate.rateAmount > 0) {
                            content += '<p style = "font-size:xx-small"><u>';
                            switch (rate.dayPremium) {
                                case 1:
                                    content += 'Weekday';
                                    break;
                                case 2:
                                    content += 'Weekend';
                                    break;
                                case 3:
                                    content += 'Bankholiday';
                                    break;
                            }
                            switch (rate.timePremium) {
                                case 1:
                                    content += ' - Day</u> for <b>' + rate.noOfHours
                                    break;
                                case 2:
                                    content += ' - Night</u> for <b>' + rate.noOfHours;
                                    break;
                            }
                            content += ' hours</b> at the rate of ';
                            content += '<b>£' + rate.rateAmount + '</b> per hour, as at from ';
                            content += $.datepicker.formatDate('dd/mm/yy', new Date(rate.effectiveDate));
                            content += '</p>';
                        }
                    });
                }
                if (content) {
                    $(content).appendTo("#hourlyRateDisplay");
                    $("#hourlyRateEdit").attr("data-app-id", feeRate.id);
                    $("#hourlyRateHistory").unbind("click");
                    $("#hourlyRateHistory").bind('click', function () { alert('History of Rates'); });
                }
            }
        }
        function loadDailyFeeRates(feeRates) {
            // Get by RateMethod where rate method is 2 for DailyRate
            var feeRate = $.getJsonObject(feeRates, { "rateMethod": 2 });
            $("#dailyRateDisplay").empty();
            if (feeRate && !$.isEmptyObject(feeRate)) {
                $("#dailyRateAdd").hide();
                var content;
                content = '<p>' + feeRate.rateDescription + '</p>';
                if (feeRate.rates && !$.isEmptyObject(feeRate.rates)) {
                    $.each(feeRate.rates, function (r, rate) {
                        if (rate.rateAmount > 0) {
                            content += '<p style = "font-size:xx-small"><u>';
                            switch (rate.dayPremium) {
                                case 1:
                                    content += 'Weekday';
                                    break;
                                case 2:
                                    content += 'Weekend';
                                    break;
                                case 3:
                                    content += 'Bankholiday';
                                    break;
                            }
                            content += '</u> at the rate of ';
                            content += '<b>£' + rate.rateAmount + '</b> per day, as at from ';
                            content += $.datepicker.formatDate('dd/mm/yy', new Date(rate.effectiveDate));
                            content += '</p>';
                        }
                    });
                }
                if (content) {
                    $(content).appendTo("#dailyRateDisplay");
                    $("#dailyRateEdit").attr("data-app-id", feeRate.id);
                    $("#dailyRateHistory").unbind("click");
                    $("#dailyRateHistory").bind('click', function () { alert('History of Rates'); });
                }
            }
        }
        function loadWeeklyFeeRates(feeRates) {
            // Get by RateMethod where rate method is 3 for weeklyRate
            var feeRates = $.getJsonObjects(feeRates, { "rateMethod": 3 });
            $("#weeklyRateDisplay").empty();
            if (feeRates && !$.isEmptyObject(feeRates)) {
                //$("#weeklyRateAdd").hide();
                var content="";
                var rateId;
                $.each(feeRates, function (fr, feeRate) {
                    content += '<p>' + feeRate.rateDescription
                        + '<img class="Rate_Edit" data-role="Weekly"' + ' data-app-id="' + feeRate.id + '" src="/images/edit.png" id="weeklyRateEdit" alt="weeklyRateEdit" style="float:right;width: 24px; height: 24px; cursor: pointer; margin: 0px; padding: 0px; margin-top: 0px;" />'
                        + '<img class="Rate_History" data-role="Weekly"' + ' data-app-id="' + feeRate.id + '" src="/images/history.png" id="weeklyRateHistory" alt="weeklyRatehistory" style="float:right;width: 24px; height: 24px; cursor: pointer; margin: 0px; padding: 0px; margin-top: 0px;" />'
                        + '</p>';
                    if (feeRate.rates && !$.isEmptyObject(feeRate.rates)) {
                        $.each(feeRate.rates, function (r, rate) {
                            if (!$.isEmptyObject(rate.closingDate)) {
                                content += '<p style="text-decoration: line-through; color:red;font-size:xx-small;">';
                            }
                            else {
                                content += '<p style = "font-size:xx-small">';
                            }
                            content += '£' + rate.rateAmount + ' as at from ';
                            content += $.datepicker.formatDate('dd/mm/yy', new Date(rate.effectiveDate));
                            content += '</p>';
                        });
                    }
                });
                if (content) {
                    $(content).appendTo("#weeklyRateDisplay");
                    $("#weeklyRateHistory").unbind('click');
                    $("#weeklyRateHistory").bind('click', function () { alert('History of Rates'); });
                    //$(document).on('click', '#weeklyRateHistory', function () { alert('History of Rates'); });
                }
            }
        }
        function loadMonthlyFeeRates(feeRates) {
            // Get by RateMethod where rate method is 4 for weeklyRate
            var feeRate = $.getJsonObject(feeRates, { "rateMethod": 4 });
            $("#monthlyRateDisplay").empty();
            if (feeRate && !$.isEmptyObject(feeRate)) {
                $("#monthlyRateAdd").hide();
                var content;
                content = '<p>' + feeRate.rateDescription + '</p>';
                if (feeRate.rates && !$.isEmptyObject(feeRate.rates)) {
                    $.each(feeRate.rates, function (r, rate) {
                        if (!$.isEmptyObject(rate.closingDate)) {
                            content += '<p style="text-decoration: line-through; color:red;font-size:xx-small;">';
                        }
                        else {
                            content += '<p style = "font-size:xx-small">';
                        }
                        content += '£' + rate.rateAmount + ' as at from ';
                        content += $.datepicker.formatDate('dd/mm/yy', new Date(rate.effectiveDate));
                        content += '</p>';
                    });
                }
                if (content) {
                    $(content).appendTo("#monthlyRateDisplay");
                    $("#monthlyRateEdit").attr("data-app-id", feeRate.id);
                    $("#monthlyRateHistory").unbind("click");
                    $("#monthlyRateHistory").bind('click', function () { alert('History of Rates'); });
                }
            }
        }
        function closeFeeDialog() {
            clearFeeForm();
            $.clearForm($(".fee-setup-dialog")); $(".ui-dialog-content").dialog("close");
        }
        function clearFeeForm() {
            feeId = null;
            customerId = null;
            feeData = null;
            feesData = null;
            $.clearForm($(".fee-setup-dialog"));
            $(".fee-setup-dialog").data("feeId", null);
            $(".fee-setup-dialog").data("customerId", null);
            $("#fee_EffectiveDate").prop("disabled", false);
            $("#fee_ClosingDate").prop("disabled", true);
            $("#fee_Name").prop("disabled", false);
            $("#fee_PayRef").prop("disabled", false);
            $("#PayerName").prop("disabled", false);
            $('#fee_PaymentTerm').prop("disabled", false);
            $("#weeklyRateAdd").show(); // Show element
            $("#listRates").show();
            $("#saveFeeMsg").hide();
            $("#hourlyRateDisplay").empty();
            $("#dailyRateDisplay").empty();
            $("#weeklyRateDisplay").empty();
            $("#monthlyRateDisplay").empty();
        }
        $("#feeSave").click(function (event) {
            if (setFeeData()) {
                if ($.isNullOrEmpty(feeData.feeRates) || feeData.feeRates.length ==0){
                    alert("Fee should have atleast one type of Rate");
                    return;
                }
                $.ajax({
                    type: "POST",
                    url: feeSaveUrl,
                    dataType: "json",
                    data: JSON.stringify(feeData),
                    contentType: "application/json",
                    success: function (data) {
                        if (!$.isNullOrEmpty(data)) {location.reload();}
                        else {alert("Fee has not been saved. Please try again later.");}
                    }
                }).fail(function (jqXHR, textStatus) {alert("Fee has not been saved. Please contact I.T Administrator.");});
            }
        });
        $(".Rate_Add").click(function (e) {
            if (setFeeData()) {
                var role = $(this).attr("data-role"); $(".rate-setup-dialog").data({"role": role, "feeData": feeData }).dialog("open");
            }
        });
        $(".exit").click(function () { closeFeeDialog(); });
        $("#fee_EffectiveDate").datepicker({dateFormat: 'dd/mm/yy',autoClose: true}).datepicker().on("change", function (e) {
            var minDate = new Date($(this).datepicker("option", "minDate"));
            var minEffectDate = new Date($(this).datepicker("getDate"));
            var maxDate = new Date($(this).datepicker("option", "maxDate"));
            //alert(minDate + "    -----   " + maxDate);
            if (minDate >= minEffectDate) {
                $(this).datepicker("setDate", new Date());
                $(this).focus();
            }
            else if (maxDate < minEffectDate) { alert("Today is the maximum date you can choose for effective date"); $(this).datepicker("setDate", new Date()); $(this).focus(); }
            else { $("#feeSave").focus(); }
        });
        $("#fee_ClosingDate").datepicker({dateFormat: 'dd/mm/yy',autoClose: true}).datepicker("setDate", new Date()).on("change", function (e) {
            var minDate = new Date($(this).datepicker("option", "minDate"));
            var closeDate = new Date($(this).datepicker("getDate"));
            var minEffectDate = new Date($(this).datepicker("getDate"));
            if (closeDate == minEffectDate) {
                alert("Close Date cannot be same as effective Date. Please change date");
            }
            else if (minDate >= closeDate) {
                $(this).datepicker("setDate", new Date());
                $(this).focus();
            }
            else { $("#feeSave").focus(); }
        });
        $(document).on('click', ".Rate_Edit", function (e) {
            if (setFeeData()) { 
                var FeeRateId = $(this).attr("data-app-id");
                if (!$.isNullOrEmpty(FeeRateId)) {
                    var role = $(this).attr("data-role");
                    $(".rate-setup-dialog").data({ "feeRateId": FeeRateId, "role": role, "feeData": feeData }).dialog("open");
                }
            }
        });
        $(".fee-setup-dialog").on("dialogopen", function (event, ui) {
            $('.ui-dialog').css('z-index', 10000); $('.ui-widget-overlay').css('z-index', 102);
            loadFeeData();
        });
        $(".fee-setup-dialog").dialog({ modal: true, resizable: false, width: 750, height: 655, autoOpen: false });
        $(".fee-setup-dialog").on("dialogclose", function (event, ui) { clearFeeForm(); });
        $(".rate-setup-dialog").on("dialogclose", function (event, ui) {
            var feeData = $(".rate-setup-dialog").data("feeData");
            loadHourlyFeeRates(feeData.feeRates);
            loadWeeklyFeeRates(feeData.feeRates);
            loadDailyFeeRates(feeData.feeRates);
            loadMonthlyFeeRates(feeData.feeRates);
            $("#addRates").hide();
            if (!$.isNullOrEmpty(feeData.feeRates) && feeData.feeRates.length >0){
                $("#saveFeeMsg").show();
            }
            else{
                $("#saveFeeMsg").hide();
            }
        });
    });
</script>