@using Finance.Web.Model
@model IEnumerable<Finance.Web.Model.InvoiceModel>
@{ 
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <style>
        html {
            font-family:Helvetica;
        }

        h1 {
            color: blue;
        }
        table{
            border-spacing: 0px;
            border:none;
        }
    </style>
    
</head>
<body style="margin:0px;padding:0px;">
    <div id="invoicePrintView">
        @foreach (Finance.Web.Model.InvoiceModel invoice in Model)
        {
            if (invoice != null)
            {
                <div class="page" id="@invoice.InvoiceNo">
                    <table id="tblInvoiceMain" style="width:100%;">
                        <tr>
                            <td>
                                FAMILY STAR LTD <br />
                                Shirley View Nursing Home<br />
                                23 Shirley Avenue<br />
                                Cheam<br />
                                Surrey<br />
                                SM2 7QS<br />
                                Tel. 020 8643 5680<br />
                                Fax. 020 8642 7313<br />
                            </td>
                            <td style="vertical-align:top;text-align:right;">
                                <table style="text-align:left;">
                                    <tr>
                                        <td>Invoice No</td>
                                        <td style="padding-left: 10px;">@invoice.InvoiceNo</td>
                                    </tr>
                                    <tr>
                                        <td>Invoice Date</td>
                                        <td style="padding-left: 10px;">@string.Format("{0}", invoice.InvoiceDate.ToString("dd MMMM yyyy"))</td>
                                    </tr>
                                    <tr>
                                        <td>SVN</td>
                                        <td style="padding-left: 10px;">@string.Format("{0}", invoice.Customer.Ref)</td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                        <tr>
                            <td style="padding-top:25px;vertical-align:top;">
                                TO :<br />
                                @if (invoice.Payer.FeeInvoiceBillingContact == null && invoice.Payer.FeeInvoiceDeliveryContact != null)
                                {
                                    if (!string.IsNullOrEmpty(invoice.Payer.FeeInvoiceDeliveryContact.Company))
                                    {
                                        <span> @invoice.Payer.FeeInvoiceDeliveryContact.Company </span> <br />
                                        if (!string.IsNullOrEmpty(invoice.Payer.FeeInvoiceDeliveryContact.Department))
                                        {
                                            <span> @invoice.Payer.FeeInvoiceDeliveryContact.Department </span> <br />
                                        }
                                        if (!string.IsNullOrEmpty(invoice.Payer.FeeInvoiceDeliveryContact.ContactReference))
                                        {
                                            <span> @invoice.Payer.FeeInvoiceDeliveryContact.ContactReference </span> <br />
                                        }
                                    }
                                    else if (!string.IsNullOrEmpty(invoice.Payer.FeeInvoiceDeliveryContact.FirstName) && !string.IsNullOrEmpty(invoice.Payer.FeeInvoiceDeliveryContact.LastName))
                                    {
                                        <span> @string.Format("{0} {1}", invoice.Payer.FeeInvoiceDeliveryContact.Title, invoice.Payer.FeeInvoiceDeliveryContact.FullName) </span> <br />
                                    }
                                    if (!string.IsNullOrEmpty(invoice.Payer.FeeInvoiceDeliveryContact.Address))
                                    {
                                        <span> @invoice.Payer.FeeInvoiceDeliveryContact.Address.Replace(Environment.NewLine, "<br>")</span> <br />
                                    }
                                    if (!string.IsNullOrEmpty(invoice.Payer.FeeInvoiceDeliveryContact.PostCode))
                                    {
                                        <span> @invoice.Payer.FeeInvoiceDeliveryContact.PostCode </span> <br />
                                    }
                                }
                                else
                                {
                                    if (!string.IsNullOrEmpty(invoice.Payer.FeeInvoiceBillingContact.Company))
                                    {
                                        <span> @invoice.Payer.FeeInvoiceBillingContact.Company </span> <br />
                                        if (!string.IsNullOrEmpty(invoice.Payer.FeeInvoiceBillingContact.Department))
                                        {
                                            <span> @invoice.Payer.FeeInvoiceBillingContact.Department </span> <br />
                                        }
                                        if (!string.IsNullOrEmpty(invoice.Payer.FeeInvoiceBillingContact.ContactReference))
                                        {
                                            <span> @invoice.Payer.FeeInvoiceBillingContact.ContactReference </span> <br />
                                        }
                                    }
                                    else if (!string.IsNullOrEmpty(invoice.Payer.FeeInvoiceBillingContact.FirstName) && !string.IsNullOrEmpty(invoice.Payer.FeeInvoiceBillingContact.LastName))
                                    {
                                        <span> @string.Format("{0} {1}", invoice.Payer.FeeInvoiceBillingContact.Title, invoice.Payer.FeeInvoiceBillingContact.FullName) </span> <br />
                                    }
                                    if (!string.IsNullOrEmpty(invoice.Payer.FeeInvoiceBillingContact.Address))
                                    {
                                        <span> @Html.Raw(invoice.Payer.FeeInvoiceBillingContact.Address.Replace(Environment.NewLine, "<br>"))</span> <br />
                                    }
                                    if (!string.IsNullOrEmpty(invoice.Payer.FeeInvoiceBillingContact.PostCode))
                                    {
                                        <span> @invoice.Payer.FeeInvoiceBillingContact.PostCode </span> <br />
                                    }
                                }
                            </td>
                            <td style="padding-top: 25px; vertical-align: top;">
                                @if (invoice.Payer.FeeInvoiceDeliveryContact != null)
                                {
                                    <span>SHIP TO :</span> <br />
                                    if (!string.IsNullOrEmpty(invoice.Payer.FeeInvoiceDeliveryContact.Company))
                                    {
                                        <span> @invoice.Payer.FeeInvoiceDeliveryContact.Company </span> <br />
                                        if (!string.IsNullOrEmpty(invoice.Payer.FeeInvoiceDeliveryContact.Department))
                                        {
                                            <span> @invoice.Payer.FeeInvoiceDeliveryContact.Department </span> <br />
                                        }
                                        if (!string.IsNullOrEmpty(invoice.Payer.FeeInvoiceDeliveryContact.ContactReference))
                                        {
                                            <span> @invoice.Payer.FeeInvoiceDeliveryContact.ContactReference </span> <br />
                                        }
                                    }
                                    else if (!string.IsNullOrEmpty(invoice.Payer.FeeInvoiceDeliveryContact.FirstName) && !string.IsNullOrEmpty(invoice.Payer.FeeInvoiceDeliveryContact.LastName))
                                    {
                                        <span> @string.Format("{0} {1}", invoice.Payer.FeeInvoiceDeliveryContact.Title, invoice.Payer.FeeInvoiceDeliveryContact.FullName) </span> <br />
                                    }
                                    if (!string.IsNullOrEmpty(invoice.Payer.FeeInvoiceDeliveryContact.Address))
                                    {
                                        <span> @Html.Raw(invoice.Payer.FeeInvoiceDeliveryContact.Address.Replace(Environment.NewLine, "<br>"))</span> <br />
                                    }
                                    if (!string.IsNullOrEmpty(invoice.Payer.FeeInvoiceDeliveryContact.PostCode))
                                    {
                                        <span> @invoice.Payer.FeeInvoiceDeliveryContact.PostCode </span> <br />
                                    }
                                }
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2" style="padding-top:25px;">
                                Invoice for the provision of @string.Format("{0} for {1}", invoice is FeeInvoiceModel ? (invoice as FeeInvoiceModel).Fee.Name : string.Empty, invoice.Customer.PersonalInfo.FullName)
                                <br />
                                Date of Admission : @invoice.Customer.ActiveDate.ToString("dd MMMM yyyy")
                            </td>
                        </tr>
                        @*Invoice Details*@
                        <tr>
                            <td colspan="2" style="padding-top:25px;">
                                @{
                                    switch (invoice.InvoiceType)
                                    {
                                        case InvoiceTypeModel.Fee:
                                            if (Html.ViewData.ContainsKey("RatesShow")) { Html.ViewData["RatesShow"] = false; }
                                            else { Html.ViewData.Add("RatesShow", false); }
                                            @Html.Partial("_FeeInvoiceDetail", invoice, new ViewDataDictionary(Html.ViewData));
                                            break;
                                        case InvoiceTypeModel.FNC:
                                            @Html.Partial("_FNCInvoiceDetail", invoice, new ViewDataDictionary(Html.ViewData));
                                            break;
                                        case InvoiceTypeModel.Expenses:
                                            @Html.Partial("_ExpensesInvoiceDetail", invoice, new ViewDataDictionary(Html.ViewData));
                                            break;
                                        case InvoiceTypeModel.Manual:
                                            @Html.Partial("_ManualInvoiceDetail", invoice, new ViewDataDictionary(Html.ViewData));
                                            break;
                                        default:
                                            break;
                                    }
                                }
                            </td>
                        </tr>
                        <tfoot>
                            <tr>
                                <td style="padding-top:50px;">
                                    Payable to  FAMILY STAR LTD<br />
                                    Bank A/C No:38860568<br />
                                    Sort Code: 30-84-68
                                </td>
                            </tr>
                            <tr>
                                <td colspan="2" style="padding-top: 50px;">
                                    Business Registered No.5932651. Registered Office: 18 The Spinneys Bickley Kent BR1 2NU.
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            }
        }
    </div>
</body>
</html>
